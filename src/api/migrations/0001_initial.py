# Generated by Django 4.1.4 on 2022-12-29 18:19

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='PadawanUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.CharField(choices=[('Учитель', 'Teacher'), ('Ученик', 'Padawan')], default='Ученик', max_length=255)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='Почтовый Адрес')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'padawan_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ContactService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('image', models.ImageField(upload_to='contact_services', verbose_name='Картинка для фронт-енда')),
            ],
            options={
                'verbose_name': 'Сервис связи',
                'verbose_name_plural': 'Сервисы связи',
                'db_table': 'contact_services',
            },
        ),
        migrations.CreateModel(
            name='PadawanUserContactChoices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Первостепенный', 'Primary'), ('Второстепенный', 'Secondary')], default='Второстепенный', max_length=255, verbose_name='Тип')),
                ('value', models.CharField(max_length=255, verbose_name='Значение')),
                ('contact_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users_choice', to='api.contactservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='possible_contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Контакт пользователя',
                'verbose_name_plural': 'Контакты пользователей',
                'db_table': 'user_contact',
            },
        ),
    ]
